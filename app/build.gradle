apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "seigneur.gauvain.chdm"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'com.jakewharton.timber:timber:4.6.1'
    implementation 'com.google.code.gson:gson:2.8.2'
    // Koin
    implementation 'org.koin:koin-android:1.0.2'
    implementation 'org.koin:koin-android-viewmodel:1.0.2'
    //RxJava & RxAndroid
    def rxJavaVersion = '2.1.1'
    def rxAndroidVersion = '2.0.2'
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    def archVersion = '1.1.1'
    implementation 'androidx.room:room-runtime:2.1.0-alpha04'
    kapt 'androidx.room:room-compiler:2.1.0-alpha04'
    // optional - RxJava support for Room
    implementation 'androidx.room:room-rxjava2:2.1.0-alpha04'
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha02'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.1.0-alpha02' // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    //implementation "android.arch.lifecycle:common-java8:$archVersion"
    // optional - ReactiveStreams support for LiveData
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.1.0-alpha02'
    // optional - Test helpers for LiveData
    testImplementation 'androidx.arch.core:core-testing:2.0.0'
    def paging_version = "1.0.1"
    implementation 'androidx.paging:paging-runtime:2.1.0'
    // alternatively - without Android dependencies for testing
    testImplementation 'androidx.paging:paging-common:2.1.0'
    // optional - RxJava support, currently in release candidate
    implementation "android.arch.paging:rxjava2:1.0.1"
    //if use this you must not used com.android.support lib but androidx
    //see : https://material.io/develop/android/docs/getting-started/
    //implementation 'com.google.android.material:material:1.0.0-beta01'
    def androidSupportVersion = '28.0.0'//'27.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'com.google.android.material:material:1.1.0-alpha04'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.palette:palette:1.0.0'
    def glideVersion = '4.7.1'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    def okHttpVersion = '3.10.0'
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    def retrofitVersion = '2.4.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    // optional - RxJava support for Retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    def butterKnifeVersion = '10.1.0'
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    //Canary leak
    def canaryVersion = '1.6.1'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$canaryVersion"
    //releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$canaryVersion
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$canaryVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha02'
}
